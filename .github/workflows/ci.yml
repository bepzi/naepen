name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    # Ensure the master branch continues to build over time
    - cron: "0 12 */15 * *"

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
    # Checks-out the repository under $GITHUB_WORKSPACE, so the job can access it
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install libfftw3-dev libxinerama-dev libasound2-dev libfreetype6-dev \
                         libwebkit2gtk-4.0-dev libcurl4-openssl-dev libflac-dev \
                         libvorbis-dev libogg-dev libjack-dev

    - name: Install latest stable JUCE
      run: |
        wget https://github.com/juce-framework/JUCE/releases/download/5.4.7/juce-5.4.7-linux.zip
        unzip juce-5.4.7-linux.zip

        # The ArchLinux maintainers have fixed a number of Linux-related bugs
        git clone --depth 1 https://git.archlinux.org/svntogit/community.git --branch packages/juce
        cp community/repos/community-x86_64/*.patch .
        cp community/repos/community-x86_64/*.h .

        cd JUCE
        patch -Np1 -i "../$pkgname-5.4.5-jucepath.patch"
        patch -Np1 -i "../$pkgname-5.4.5-juce_vst.patch"
        patch -Np1 -i "../$pkgname-5.4.5-disable_update_check.patch"
        patch -Np1 -i "../$pkgname-5.4.5-disable_usage_data.patch"
        patch -Np1 -i "../$pkgname-5.4.5-fix_include_defines.patch"
        patch -Np1 -i "../$pkgname-5.4.5-link_to_systemlibs.patch"
        sed -e 's/\-march=native//g' \
            -i extras/Projucer/Builds/LinuxMakefile/Makefile
        cd ..

        cp juce_VSTInterface.h JUCE/modules/juce_audio_processors/format_types

        sudo cp -r JUCE /usr/share/juce

    - name: Build with Makefile, GCC
      run: |
        cd Builds/LinuxMakefile
        CC=$(which gcc) CXX=$(which g++) CONFIG=Debug make -j

    - name: Build with CMake, Clang
      run: |
        cd Builds/CLion
        cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_C_COMPILER=$(which clang) \
              -DCMAKE_CXX_COMPILER=$(which clang++) -S . -B build
        cmake --build build -j
